<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>React Product Card</title>
    <!-- React & ReactDOM from CDN -->
    <script
      crossorigin
      src="https://unpkg.com/react@18/umd/react.development.js"
    ></script>
    <script
      crossorigin
      src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"
    ></script>
    <!-- Babel for JSX -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

    <style>
      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #667eea, #764ba2);
        padding: 30px;
        margin: 0;
        color: #fff;
      }

      h1 {
        text-align: center;
        margin-bottom: 30px;
        font-size: 2.2rem;
        letter-spacing: 1px;
      }

      .container {
        display: flex;
        gap: 25px;
        flex-wrap: wrap;
        justify-content: center;
      }

      .card {
        width: 220px;
        border-radius: 15px;
        padding: 20px;
        background: #fff;
        color: #333;
        box-shadow: 0px 6px 20px rgba(0, 0, 0, 0.2);
        transition: transform 0.25s ease, box-shadow 0.25s ease;
        cursor: pointer;
        position: relative;
        overflow: hidden;
      }

      .card::before {
        content: "";
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(0, 0, 0, 0.05), transparent 70%);
        transform: rotate(25deg);
      }

      .card:hover {
        transform: translateY(-10px) scale(1.05);
        box-shadow: 0px 12px 30px rgba(0, 0, 0, 0.3);
      }

      .card h2 {
        font-size: 20px;
        margin-bottom: 12px;
        color: #222;
      }

      .price {
        color: #444;
        font-weight: 600;
        font-size: 1.1rem;
        margin-bottom: 10px;
      }

      .in-stock {
        color: #16a34a;
        font-weight: bold;
        font-size: 1rem;
      }

      .out-stock {
        color: #dc2626;
        font-weight: bold;
        font-size: 1rem;
      }

      /* Subtle animation for stock status */
      .in-stock,
      .out-stock {
        animation: fadeIn 0.6s ease-in-out;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(5px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
    </style>
  </head>
  <body>
    <h1>React Product Card Example</h1>
    <div id="root"></div>

    <script type="text/babel">
      // ✅ ProductCard component
      function ProductCard({ name, price, inStock }) {
        return (
          <div className="card">
            <h2>{name}</h2>
            <p className="price">Price: ${price}</p>
            <p className={inStock ? "in-stock" : "out-stock"}>
              {inStock ? "In Stock" : "Out of Stock"}
            </p>
          </div>
        );
      }

      // ✅ App component
      function App() {
        const products = [
          { name: "Laptop", price: 750, inStock: true },
          { name: "Smartphone", price: 499, inStock: false },
          { name: "Headphones", price: 99, inStock: true },
          { name: "Keyboard", price: 49, inStock: true },
        ];

        return (
          <div className="container">
            {products.map((p, index) => (
              <ProductCard
                key={index}
                name={p.name}
                price={p.price}
                inStock={p.inStock}
              />
            ))}
          </div>
        );
      }

      // ✅ Render to DOM
      const root = ReactDOM.createRoot(document.getElementById("root"));
      root.render(<App />);
    </script>
  </body>
</html>
